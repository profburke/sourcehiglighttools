# definitions for Swift

include "c_comment.lang"

(keyword,normal,classname) = `(\<class|protocol|struct|enum)([[:blank:]]+)([[:alnum:]_]+)`

include "number.lang"

include "c_string.lang"

keyword = "as",
"associativity",
"break",
"case",
"catch",
"class",
"continue",
"convenience",
"default",
"defer",
"deinit",
"didSet",
"do",
"dynamicType", # ??
"else",
"enum",
"extension",
"fallthrough",
"false",
"final",
"for",
"func",
"get",
"guard",
"if",
"in",
"import", # ??
"infix",
"init", # ??
"inout",
"internal",
"is", # ??
"lazy",
"left", # ??
"let",
"mutating",
"new", # ??
"nil", # ??
"none", # ??
"nonmutating", # ??
"operator",
"override",
"postfix",
"precedence",
"prefix",
"private",
"protocol", # ??
"public",
"repeat",
"required",
"rethrows",
"return",
"right", # ??
"self",
"set",
"static",
"struct",
"subscript",
"super",
"switch",
"throws",
"true",
"try",
"Type", # ??
"typealias",
"var",
"unowned", 
"unowned(safe)",
"unowned(unsafe)",
"weak",
"where",
"while",
"willSet",
"__COLUMN__",
"__FILE__",
"__FUNCTION__",
"__LINE__"

                                                

type = "AbsoluteValuable|Any|AnyClass|Array|ArrayBound|ArrayBuffer|ArrayBufferType|ArrayLiteralConvertible|ArrayType|AutoreleasingUnsafePointer|BidirectionalIndex|Bit|BitwiseOperations|Bool|C|CBool|CChar|CChar16|CChar32|CConstPointer|CConstVoidPointer|CDouble|CFloat|CInt|CLong|CLongLong|CMutablePointer|CMutableVoidPointer|COpaquePointer|CShort|CSignedChar|CString|CUnsignedChar|CUnsignedInt|CUnsignedLong|CUnsignedLongLong|CUnsignedShort|CVaListPointer|CVarArg|CWideChar|Character|CharacterLiteralConvertible|Collection|CollectionOfOne|Comparable|ContiguousArray|ContiguousArrayBuffer|DebugPrintable|Dictionary|DictionaryGenerator|DictionaryIndex|DictionaryLiteralConvertible|Double|EmptyCollection|EmptyGenerator|EnumerateGenerator|Equatable|ExtendedGraphemeClusterLiteralConvertible|ExtendedGraphemeClusterType|ExtensibleCollection|FilterCollectionView|FilterCollectionViewIndex|FilterGenerator|FilterSequenceView|Float|Float32|Float64|Float80|FloatLiteralConvertible|FloatLiteralType|FloatingPointClassification|FloatingPointNumber|ForwardIndex|Generator|GeneratorOf|GeneratorOfOne|GeneratorSequence|Hashable|HeapBuffer|HeapBufferStorage|HeapBufferStorageBase|ImplicitlyUnwrappedOptional|IndexingGenerator|Int|Int16|Int32|Int64|Int8|IntEncoder|IntMax|Integer|IntegerArithmetic|IntegerLiteralConvertible|IntegerLiteralType|Less|LifetimeManager|LogicValue|MapCollectionView|MapSequenceGenerator|MapSequenceView|MaxBuiltinFloatType|MaxBuiltinIntegerType|Mirror|MirrorDisposition|MutableCollection|MutableSliceable|ObjectIdentifier|OnHeap|Optional|OutputStream|PermutationGenerator|Printable|QuickLookObject|RandomAccessIndex|Range|RangeGenerator|RawByte|RawOptionSet|RawRepresentable|Reflectable|Repeat|ReverseIndex|ReverseRange|ReverseRangeGenerator|ReverseView|Sequence|SequenceOf|SignedInteger|SignedNumber|Sink|SinkOf|Slice|SliceBuffer|Sliceable|StaticString|Streamable|StridedRangeGenerator|String|StringElement|StringInterpolationConvertible|StringLiteralConvertible|StringLiteralType|UInt|UInt16|UInt32|UInt64|UInt8|UIntMax|UTF16|UTF32|UTF8|UWord|UnicodeCodec|UnicodeScalar|Unmanaged|UnsafeArray|UnsafePointer|UnsignedInteger|Void|Word|Zip2|ZipGenerator2|abs|advance|alignof|alignofValue|assert|bridgeFromObjectiveC|bridgeFromObjectiveCUnconditional|bridgeToObjectiveC|bridgeToObjectiveCUnconditional|c|contains|count|countElements|countLeadingZeros|debugPrint|debugPrintln|distance|dropFirst|dropLast|dump|encodeBitsAsWords|enumerate|equal|false|filter|find|getBridgedObjectiveCType|getVaList|indices|insertionSort|isBridgedToObjectiveC|isBridgedVerbatimToObjectiveC|isUniquelyReferenced|join|lexicographicalCompare|map|max|maxElement|min|minElement|nil|numericCast|partition|posix|print|println|quickSort|reduce|reflect|reinterpretCast|reverse|roundUpToAlignment|sizeof|sizeofValue|sort|split|startsWith|strideof|strideofValue|swap|swift|toString|transcode|true|underestimateCount|unsafeReflect|withExtendedLifetime|withObjectAtPlusZero|withUnsafePointer|withUnsafePointerToObject|withUnsafePointers|withVaList"


include "function.lang"

include "symbols.lang"

cbracket = "{|}"




